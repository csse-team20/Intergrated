/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy_lab;

import code.DBconnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lakshika
 */
public class Search_Patient_Lab_Test extends javax.swing.JInternalFrame {

    /**
     * Creates new form Search_Patient_Lab_Test
     */
    Connection c = null;
    PreparedStatement p = null;
    ResultSet rs = null;
    public Search_Patient_Lab_Test() {
        initComponents();
        c = DBconnection.getConnection();
        tableload();
    }
    
    public void tableload() {

        try {
            String sql1 = " select lp.labid as 'Test Number',lp.patient_name as 'Patient Name',lpt.testCode as 'Lab Test Code',l.testName as 'Lab Test Name',l.testType as 'Test Type',lpt.status as 'Ststus',lpt.priority 'Priority',lpt.duedate as 'Due Date' \n"
                    + "from lab_patient_test lpt,lab_patient lp,lab l\n"
                    + "where lpt.testCode=l.testCode and lpt.labid = lp.labid and l.testCode = lpt.testCode \n"
                    + "group by lp.labid,lp.patient_name,lpt.testCode,l.testName,lpt.status,lpt.priority,lpt.duedate ";
            p = c.prepareStatement(sql1);
            rs = p.executeQuery();
            AllDataTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        AllDataTable = new javax.swing.JTable();
        cmbSearch = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();

        setTitle("Search Patient Lab Test");
        setPreferredSize(new java.awt.Dimension(1366, 550));

        AllDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Test Number", "Patient Name", "Lab Test Name", "Test Code", "Test Type", "Due Date", "Status"
            }
        ));
        AllDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllDataTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(AllDataTable);

        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By", "Test Name", "Patient Name" }));
        cmbSearch.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cmbSearchMouseMoved(evt);
            }
        });
        cmbSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbSearchMouseExited(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AllDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllDataTableMouseClicked

       
    }//GEN-LAST:event_AllDataTableMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        
        int num = cmbSearch.getSelectedIndex();
        String text = txtSearch.getText();
        if (num == 1) {
            try {
                String sql1 = " select lp.labid as 'Test Number',lp.patient_name as 'Patient Name',lpt.testCode as 'Lab Test Code',l.testName as 'Lab Test Name',l.testType as 'Test Type',lpt.status as 'Ststus',lpt.priority 'Priority',lpt.duedate as 'Due Date' \n"
                    + "from lab_patient_test lpt,lab_patient lp,lab l\n"
                    + "where lpt.testCode=l.testCode and lpt.labid = lp.labid and l.testCode = lpt.testCode and l.testName like '%" + text + "%'\n"
                    + "group by lp.labid,lp.patient_name,lpt.testCode,l.testName,lpt.status,lpt.priority,lpt.duedate ";
                p = c.prepareStatement(sql1);
                rs = p.executeQuery();
                AllDataTable.setModel(DbUtils.resultSetToTableModel(rs));
                //clearfield();

            } catch (SQLException ex) {
                System.out.println(ex);

            }
        } else if (num == 2) {
            try {
                String sql1 = " select lp.labid as 'Test Number',lp.patient_name as 'Patient Name',lpt.testCode as 'Lab Test Code',l.testName as 'Lab Test Name',l.testType as 'Test Type',lpt.status as 'Ststus',lpt.priority 'Priority',lpt.duedate as 'Due Date' \n"
                    + "from lab_patient_test lpt,lab_patient lp,lab l\n"
                    + "where lpt.testCode=l.testCode and lpt.labid = lp.labid and l.testCode = lpt.testCode and lp.patient_name like '%" + text + "%'\n"
                    + "group by lp.labid,lp.patient_name,lpt.testCode,l.testName,lpt.status,lpt.priority,lpt.duedate ";
                p = c.prepareStatement(sql1);
                rs = p.executeQuery();
                AllDataTable.setModel(DbUtils.resultSetToTableModel(rs));
                //clearfield();

            } catch (SQLException ex) {
                System.out.println(ex);

            }
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cmbSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSearchMouseEntered
       
        
    }//GEN-LAST:event_cmbSearchMouseEntered

    private void cmbSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSearchMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchMouseExited

    private void cmbSearchMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbSearchMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchMouseMoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AllDataTable;
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
