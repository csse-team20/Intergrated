/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy_lab;

import code.DBconnection;
import code.IncrementId;
import code.patient_lab_test_management;
import code.validation;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Lakshika
 */
public class Manage_Patient_Lab_test extends javax.swing.JInternalFrame {

    Connection c = null;
    PreparedStatement p = null;
    ResultSet rs = null;

    public Manage_Patient_Lab_test() {
        initComponents();
        c = DBconnection.getConnection();

        IncrementId mf = new IncrementId();
        String did = mf.setId("labid", "lab_patient", "TESP");

        lblIID.setText(did);
        labTestName();

        tableload();

    }

    public void tableload() {

        try {
            String sql1 = " select lp.labid as 'Test Number',lp.patient_name as 'Patient Name',lpt.testCode as 'Lab Test Code',l.testName as 'Lab Test Name',l.testType as 'Test Type',lpt.status as 'Ststus',lpt.priority 'Priority',lpt.duedate as 'Due Date' \n"
                    + "from lab_patient_test lpt,lab_patient lp,lab l\n"
                    + "where lpt.testCode=l.testCode and lpt.labid = lp.labid and l.testCode = lpt.testCode and lpt.status = 'Pending'\n"
                    + "group by lp.labid,lp.patient_name,lpt.testCode,l.testName,lpt.status,lpt.priority,lpt.duedate ";
            p = c.prepareStatement(sql1);
            rs = p.executeQuery();
            AllDataTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    public void clearfield() {

        txtPatient.setText("");
        cmbTest.setSelectedIndex(0);
        cmbpriority.setSelectedIndex(0);

    }

    public void clearTable(int row) {

        for (int i = 0; i < row; i++) {
            for (int j = 0; j < 6; j++) {
                addTestTable.setValueAt("", i, j);
            }
        }
    }

    public void labTestName() {
        try {
            String name = "SELECT testName from lab";
            p = c.prepareStatement(name);
            rs = p.executeQuery();
            while (rs.next()) {
                String testName = rs.getString("testName");
                cmbTest.addItem(testName);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        AllDataTable = new javax.swing.JTable();
        Update = new javax.swing.JButton();
        Delate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbTest = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbStstus = new javax.swing.JComboBox<>();
        dueDate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        cmbpriority = new javax.swing.JComboBox<>();
        lblType = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblcode = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addTestTable = new javax.swing.JTable();
        btnAddAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtPatient = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lblIID = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1366, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AllDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Test Number", "Patient Name", "Lab Test Name", "Test Code", "Test Type", "Due Date", "Status"
            }
        ));
        AllDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllDataTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(AllDataTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 780, 140));

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, -1, -1));

        Delate.setText("Delete");
        Delate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelateActionPerformed(evt);
            }
        });
        getContentPane().add(Delate, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 420, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tests Details"));

        jLabel1.setText("Lab Test Name");

        jLabel3.setText("Test Type");

        cmbTest.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Test" }));
        cmbTest.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                cmbTestPopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmbTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbTestMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbTestMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbTestMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbTestMouseReleased(evt);
            }
        });
        cmbTest.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbTestKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbTestKeyReleased(evt);
            }
        });

        jLabel5.setText("Due Date");

        jLabel4.setText("Ststus");

        cmbStstus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Status", "Pending", "Done" }));

        jLabel7.setText("Priority");

        cmbpriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Priority", "High", "Medium", "Low" }));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel8.setText("Test Code");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdd)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dueDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbStstus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbpriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbTest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblcode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 72, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(lblcode, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(dueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(cmbStstus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(cmbpriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAdd)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 340, 340));

        addTestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Test Name", "Test Code", "Test Type", "Due Date", "Status", "Priority"
            }
        ));
        jScrollPane1.setViewportView(addTestTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 740, 120));

        btnAddAll.setText("Add All Test");
        btnAddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 420, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Patient Details"));

        jLabel2.setText("Patient Name");

        jLabel6.setText("Test Number");

        lblIID.setText("lab id");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPatient)
                    .addComponent(lblIID, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 340, 100));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AllDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllDataTableMouseClicked

        int r1 = AllDataTable.getSelectedRow();

        lblIID.setText(AllDataTable.getValueAt(r1, 0).toString());
        txtPatient.setText(AllDataTable.getValueAt(r1, 1).toString());
        cmbTest.setSelectedItem(AllDataTable.getValueAt(r1, 3).toString());
        lblType.setText(AllDataTable.getValueAt(r1, 4).toString());
        lblcode.setText(AllDataTable.getValueAt(r1, 2).toString());
        cmbStstus.setSelectedItem(AllDataTable.getValueAt(r1, 5).toString());
        cmbpriority.setSelectedItem(AllDataTable.getValueAt(r1, 6).toString());

        String dateval[] = (AllDataTable.getValueAt(r1, 7).toString()).split("-");
        String fullDate = dateval[1] + "-" + dateval[2] + "-" + dateval[0];
        System.out.println("full " + fullDate);
        java.util.Date date = null;
        try {
            date = new SimpleDateFormat("MM-dd-yyyy").parse(fullDate);
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        System.out.println(date);
        dueDate.setDate(date);

        btnAdd.setVisible(false);
        btnAddAll.setVisible(false);

    }//GEN-LAST:event_AllDataTableMouseClicked

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed

        String tpatient = txtPatient.getText();
        String ttestsName = cmbTest.getSelectedItem().toString();
        String ttestType = lblType.getText();
        java.sql.Date sqldate = new java.sql.Date(dueDate.getDate().getTime());
        String tstatus = cmbStstus.getSelectedItem().toString();
        String tpriority = cmbpriority.getSelectedItem().toString();
        String labid = lblIID.getText();
        String ttestCode = lblcode.getText();

        validation v = new validation();

        if (cmbTest.getSelectedIndex() != 0) {
            if (cmbStstus.getSelectedIndex() != 0) {
                if (cmbpriority.getSelectedIndex() != 0) {
                    if (!ttestType.isEmpty() || !ttestCode.isEmpty()) {
                        if (v.dateValidation(sqldate)) {
                            patient_lab_test_management up = new patient_lab_test_management();
                            up.updatePatientLab(labid, ttestCode, tstatus, tpriority, sqldate);

                            up.updatePatient(labid, tpatient);

                            tableload();
                            clearfield();

                            IncrementId mf = new IncrementId();
                            String did = mf.setId("labid", "lab_patient", "TESP");

                            lblIID.setText(did);
                        } else {
                            JOptionPane.showMessageDialog(null, "Due date should not be past date ");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "You must fill test type and test code");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "You must select priority");
                }
            } else {
                JOptionPane.showMessageDialog(null, "You must select status");
            }
        } else {
            JOptionPane.showMessageDialog(null, "You must selate test name ");
        }

        btnAdd.setVisible(true);
        btnAddAll.setVisible(true);
    }//GEN-LAST:event_UpdateActionPerformed

    private void DelateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelateActionPerformed

        String labid = lblIID.getText();
        String ttestCode = lblcode.getText();
        int y = JOptionPane.showConfirmDialog(this, "Do You Want to delete");

        if (y == 0) {

            patient_lab_test_management d = new patient_lab_test_management();
            d.deletePatientTest(labid, ttestCode);

            tableload();
            clearfield();

            IncrementId mf = new IncrementId();
            String did = mf.setId("labid", "lab_patient", "TESP");

            lblIID.setText(did);

            btnAdd.setVisible(true);
            btnAddAll.setVisible(true);

        }
    }//GEN-LAST:event_DelateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        String ttestName = cmbTest.getSelectedItem().toString();
        String ttestType = lblType.getText();
        java.sql.Date sqldate = new java.sql.Date(dueDate.getDate().getTime());
        String tstatus = cmbStstus.getSelectedItem().toString();
        String tpriority = cmbpriority.getSelectedItem().toString();
        String ttestCode = lblcode.getText();
        System.out.println(sqldate);
        validation v = new validation();

        int filledRowCount = 0;
        rowSearch:
        for (int row = 0; row < addTestTable.getRowCount(); row++) {

            for (int col = 0; col < addTestTable.getColumnCount(); col++) {
                if (addTestTable.getValueAt(row, col) == null) {
                    break rowSearch;
                } else {
                    filledRowCount++;
                    continue rowSearch;
                }
            }
        }
        if (cmbTest.getSelectedIndex() != 0) {
            if (cmbStstus.getSelectedIndex() != 0) {
                if (cmbpriority.getSelectedIndex() != 0) {
                    if (!ttestType.isEmpty() || !ttestCode.isEmpty()) {
                        if (v.dateValidation(sqldate)) {

                            if (filledRowCount == 0) {

                                addTestTable.setValueAt(ttestName, 0, 0);
                                addTestTable.setValueAt(ttestCode, 0, 1);
                                addTestTable.setValueAt(ttestType, 0, 2);
                                addTestTable.setValueAt(sqldate, 0, 3);
                                addTestTable.setValueAt(tstatus, 0, 4);
                                addTestTable.setValueAt(tpriority, 0, 5);

                                cmbTest.setSelectedIndex(0);
                                lblType.setText("");
                                lblcode.setText("");
                            } else {
                                for (int i = 0; i < filledRowCount; i++) {
                                    String code = addTestTable.getValueAt(i, 1).toString();
                                    if (code.equals(ttestCode)) {
                                        JOptionPane.showMessageDialog(this, "Test has already added");
                                    } else {
                                        addTestTable.setValueAt(ttestName, filledRowCount, 0);
                                        addTestTable.setValueAt(ttestCode, filledRowCount, 1);
                                        addTestTable.setValueAt(ttestType, filledRowCount, 2);
                                        addTestTable.setValueAt(sqldate, filledRowCount, 3);
                                        addTestTable.setValueAt(tstatus, filledRowCount, 4);
                                        addTestTable.setValueAt(tpriority, filledRowCount, 5);

                                        cmbTest.setSelectedIndex(0);
                                        lblType.setText("");
                                        lblcode.setText("");
                                    }
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Due date should not be past date ");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "You must fill test type and test code");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "You must select priority");
                }
            } else {
                JOptionPane.showMessageDialog(null, "You must select status");
            }
        } else {
            JOptionPane.showMessageDialog(null, "You must selate test name ");
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllActionPerformed

        String tlabid = lblIID.getText();
        String tname = txtPatient.getText();
        String ttestName = "";
        String ttestCode = "";
        String ttype = "";
        Date dueDate;
        String tststus = "";
        String tpriority = "";

        int filledRowCount = 0;
        rowSearch:
        for (int row = 0; row < addTestTable.getRowCount(); row++) {

            for (int col = 0; col < addTestTable.getColumnCount(); col++) {
                if (addTestTable.getValueAt(row, col) == null) {
                    break rowSearch;
                } else {
                    filledRowCount++;
                    continue rowSearch;
                }
            }
        }
        for (int i = 0; i < filledRowCount; i++) {

            ttestName = addTestTable.getValueAt(i, 0).toString();
            ttestCode = addTestTable.getValueAt(i, 1).toString();
            ttype = addTestTable.getValueAt(i, 2).toString();
            dueDate = (Date) addTestTable.getValueAt(i, 3);
            tststus = addTestTable.getValueAt(i, 4).toString();
            tpriority = addTestTable.getValueAt(i, 5).toString();
            System.out.println(ttestName + ":" + ":" + ttestCode + ":" + dueDate);

            patient_lab_test_management a = new patient_lab_test_management();
            a.addPatientLabTest(tlabid, tname, ttestName, ttestCode, ttype, dueDate, tststus, tpriority);

        }
        tableload();
        clearTable(filledRowCount);

        IncrementId mf = new IncrementId();
        String did = mf.setId("labid", "lab_patient", "TESP");

        lblIID.setText(did);
    }//GEN-LAST:event_btnAddAllActionPerformed

    private void cmbTestKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbTestKeyReleased


    }//GEN-LAST:event_cmbTestKeyReleased

    private void cmbTestKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbTestKeyPressed


    }//GEN-LAST:event_cmbTestKeyPressed

    private void cmbTestMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTestMouseReleased

    }//GEN-LAST:event_cmbTestMouseReleased

    private void cmbTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTestMouseClicked


    }//GEN-LAST:event_cmbTestMouseClicked

    private void cmbTestMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTestMousePressed

    }//GEN-LAST:event_cmbTestMousePressed

    private void cmbTestPopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbTestPopupMenuCanceled
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTestPopupMenuCanceled

    private void cmbTestMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTestMouseEntered
        String ttestName = cmbTest.getSelectedItem().toString();
        System.out.println(ttestName);
        try {
            String name = "SELECT testType,testCode from lab WHERE testName='" + ttestName + "'";
            p = c.prepareStatement(name);
            rs = p.executeQuery();
            while (rs.next()) {
                String testType = rs.getString("testType");
                String testCode = rs.getString("testCode");
                lblType.setText(testType);
                lblcode.setText(testCode);
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmbTestMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AllDataTable;
    private javax.swing.JButton Delate;
    private javax.swing.JButton Update;
    private javax.swing.JTable addTestTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddAll;
    private javax.swing.JComboBox<String> cmbStstus;
    private javax.swing.JComboBox<String> cmbTest;
    private javax.swing.JComboBox<String> cmbpriority;
    private com.toedter.calendar.JDateChooser dueDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblIID;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblcode;
    private javax.swing.JTextField txtPatient;
    // End of variables declaration//GEN-END:variables
}
